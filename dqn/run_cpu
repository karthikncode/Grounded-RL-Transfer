#!/bin/bash

if [ -z "$1" ]
  then echo "Please provide the port, e.g.  ./run_cpu 6000 "; exit 0
fi
ENV="gvgai"
PORT=$1
FRAMEWORK="alewrap"
exp_folder=$2
num_actions=5  # This has been overridden in the code - auto inferred. 
game_num=${3:-"0"}
level_num=${4:-"0"}

game_path=$PWD"/roms/"
env_params="useRGB=true"
agent="NeuralQLearner"
n_replay=1
netfile=${5:-"\"convnet_gvgai\""}
update_freq=4
actrep=1
discount=0.99
seed=1
learn_start=5000
pool_frms_type="\"max\""
pool_frms_size=2
initial_priority="false"
replay_memory=1000000

eps_begin=${6:-1}
eps_end=0.1
eps_endt=$replay_memory
lr=0.00025
agent_type="gvgai"
preproc_net="\"net_downsample_2x_full_y\""
agent_name=$exp_folder"/"$agent_type"_"$1
state_dim=288 #330  # This has been overridden in the code - auto inferred. 

ncols=1
agent_params="num_actions="$num_actions",lr="$lr",ep="$eps_begin",ep_end="$eps_end",ep_endt="$eps_endt",discount="$discount",hist_len=1,learn_start="$learn_start",replay_memory="$replay_memory",update_freq="$update_freq",n_replay="$n_replay",network="$netfile",preproc="$preproc_net",state_dim="$state_dim",minibatch_size=32,rescale_r=1,ncols="$ncols",bufferSize=512,valid_size=500,target_q=10000,clip_delta=1,min_reward=-1,max_reward=1"
steps=5000000
eval_freq=5000
eval_steps=5000  #Change
prog_freq=5000
save_freq=25000
gpu=-1
random_starts=30
pool_frms="type="$pool_frms_type",size="$pool_frms_size
num_threads=1

args="-zmq_port $PORT -game_num $game_num -level_num $level_num -exp_folder $exp_folder -num_actions $num_actions -framework $FRAMEWORK -game_path $game_path -name $agent_name -env $ENV -env_params $env_params -agent $agent -agent_params $agent_params -steps $steps -eval_freq $eval_freq -eval_steps $eval_steps -prog_freq $prog_freq -save_freq $save_freq -actrep $actrep -gpu $gpu -random_starts $random_starts -pool_frms $pool_frms -seed $seed -threads $num_threads"
echo $args

cd dqn
mkdir -p $exp_folder;
OMP_NUM_THREADS=1 th train_agent.lua $args
